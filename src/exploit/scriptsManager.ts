import { KeybindManager } from "./keybindManager";

export class ScriptsManager {
    private scripts: { [key: string]: Map<Function,string> } = {};
    private keybindManager: KeybindManager;
    
    constructor() {
        this.keybindManager = new KeybindManager();
    }
    
    addScript(name: string, script: Function, keybind: string) {
        this.scripts[name] = new Map().set(script, keybind);
        this.keybindManager.addKeybind(new Set([keybind]), () => {
            console.log(`Running script: ${name}`);
            script();
        });
    }
    
    getScript(name: string): Map<Function,string> | undefined {
        return this.scripts[name];
    }
    
    removeScript(name: string) {
        delete this.scripts[name];
        this.keybindManager.removeKeybind(new Set([this.scripts[name].values().next().value]));
    }
    
    listScripts(): string[] {
        return Object.keys(this.scripts);
    }
}