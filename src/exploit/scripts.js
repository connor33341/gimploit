import { ScriptsManager } from "./scriptsManager";
import { toggleAutoAnswer } from "./scripts/autoanswer.js";

function getConfig(name){
    fetch(`../config/${name}.json`).then((response) => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    });
}

export class ScriptHandler {
    scripts = {
        autoanswer: {
            script: toggleAutoAnswer,
            config: getConfig('autoanswer'),
        }
    }
    constructor() {
        console.log("ScriptHandler constructor");
        this.manager = new ScriptsManager();
        for (const [name, config] of Object.entries(this.scripts)) {
            keybind = config.keybind ? config.keybind : "e";
            console.log(`Adding script ${name} with keybind ${keybind}`);
            this.manager.addScript(name, config.script, keybind);
        }
    }
}