import { ScriptsManager } from "./scriptsManager";
import { toggleAutoAnswer } from "./scripts/autoanswer.js";

function getConfig(name){
    import (`../config/${name}.json`).then((config) => {
        console.log(`Loaded config ${name}:`, config);
        return config;
    }).catch((err) => {
        console.error(`Error loading config ${name}:`, err);
    });
}

export class ScriptHandler {
    scripts = {
        autoanswer: {
            script: toggleAutoAnswer,
            config: getConfig('autoanswer'),
        }
    }
    constructor() {
        console.log("ScriptHandler constructor");
        this.manager = new ScriptsManager();
        for (const [name, config] of Object.entries(this.scripts)) {
            keybind = config.keybind ? config.keybind : "e";
            console.log(`Adding script ${name} with keybind ${keybind}`);
            this.manager.addScript(name, config.script, keybind);
        }
    }
}